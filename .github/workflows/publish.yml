on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

name: Publish

jobs:
  build_and_test_linux:
    name: Build and Test (Linux)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - uses: taiki-e/install-action@nextest
      - name: 'Build and test'
        run: cargo nextest run --workspace --all-features

  build_and_test_windows:
    name: Build and Test (Windows)
    runs-on: windows-latest
    timeout-minutes: 20
    steps:
      - name: Prepare symlink configuration
        run: git config --global core.symlinks true

      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - uses: taiki-e/install-action@nextest
      - name: 'Build and test'
        run: cargo nextest run --workspace --all-features

  crates_io_publish:
    name: Publish (crates.io)
    needs:
      - build_and_test_linux
      - build_and_test_windows

    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: cargo-release Cache
        id: cargo_release_cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/cargo-release
          key: ${{ runner.os }}-cargo-release

      - run: cargo install cargo-release
        if: steps.cargo_release_cache.outputs.cache-hit != 'true'

      - name: cargo login
        run: cargo login ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Write release version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo Version: $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: "cargo release version"
        run: |-
          cargo release \
            version \
            --allow-branch HEAD \
            --no-confirm \
            --execute \
             ${VERSION}

      - name: "cargo publish"
        run: |-
          cargo publish \
            --all-features \
            --allow-dirty